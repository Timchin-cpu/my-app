{"ast":null,"code":"// import React, { useState } from \"react\";\n// import styles from \"./Menu.module.css\";\n\n// const Menu = () => {\n//   const [isOpen, setIsOpen] = useState(false);\n\n//   const toggleMenu = () => {\n//     setIsOpen(!isOpen);\n//   };\n\n//   return (\n//     <div className={styles.menuContainer}>\n//       <details open={isOpen}>\n//         <summary onClick={toggleMenu} className={styles.summary}>\n//           {isOpen ? \"X\" : \"III\"}\n//         </summary>\n//         <nav className={`${styles.menu} ${isOpen ? styles.menuOpen : \"\"}`}>\n//           <a href=\"#link\">Home</a>\n//           <a href=\"#link\">Work</a>\n//           <a href=\"#link\">Links</a>\n//           <a href=\"#link\">Contact</a>\n//           <a href=\"#link\">About</a>\n//         </nav>\n//       </details>\n//     </div>\n//   );\n// };\n\n// export default Menu;","map":{"version":3,"names":[],"sources":["C:/Rworksite/my-app/src/components/Menu/Menu.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import styles from \"./Menu.module.css\";\r\n\r\n// const Menu = () => {\r\n//   const [isOpen, setIsOpen] = useState(false);\r\n\r\n//   const toggleMenu = () => {\r\n//     setIsOpen(!isOpen);\r\n//   };\r\n\r\n//   return (\r\n//     <div className={styles.menuContainer}>\r\n//       <details open={isOpen}>\r\n//         <summary onClick={toggleMenu} className={styles.summary}>\r\n//           {isOpen ? \"X\" : \"III\"}\r\n//         </summary>\r\n//         <nav className={`${styles.menu} ${isOpen ? styles.menuOpen : \"\"}`}>\r\n//           <a href=\"#link\">Home</a>\r\n//           <a href=\"#link\">Work</a>\r\n//           <a href=\"#link\">Links</a>\r\n//           <a href=\"#link\">Contact</a>\r\n//           <a href=\"#link\">About</a>\r\n//         </nav>\r\n//       </details>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Menu;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}